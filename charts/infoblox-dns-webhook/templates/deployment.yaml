apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infoblox-dns-webhook.fullname" . }}
  labels:
    {{- include "infoblox-dns-webhook.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "infoblox-dns-webhook.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "infoblox-dns-webhook.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "infoblox-dns-webhook.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8443
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /health
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /health
          #    port: http
          volumeMounts:
          - name: {{ .Values.volumeMounts.name }}
            mountPath: {{ .Values.volumeMounts.mountPath }}
          env:
          {{- include "helpers.list-plain-env-variables" . | indent 10 }}
          {{- include "helpers.list-env-variables" . | indent 10 }}
          {{- include "helpers.list-secret-variables" . | indent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: webhook-cabundle-update
          image: quay.io/didil/k8s-webhook-cert-manager:0.13.19-1-a
          command: ["/bin/sh","-c","caBundle=$(kubectl get secret {{.Release.Name }}-tls -n {{ .Release.Namespace }} -o jsonpath='{.data.caBundle}''); \
          if [ -n ${caBundle} ];then echo 'Found cert: ${caBundle}';fi \
          echo 'INFO: Trying to patch webhook to add caBundle';\
           kubectl patch mutatingwebhookconfiguration {{ .Values.project.name }}-ingress-mutation \
           --type='json' -p \"[{'op': 'add', 'path': '/webhooks/0/clientConfig/caBundle', 'value':'${caBundle}'}]\""]
      volumes:
      {{- toYaml .Values.volumes | default "" | nindent 6 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
